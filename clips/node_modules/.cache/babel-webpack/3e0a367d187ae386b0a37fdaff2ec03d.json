{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/stavsa/Documents/Angular-/clips/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { map, delay } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nimport * as i2 from \"@angular/fire/compat/firestore\";\nimport * as i3 from \"@angular/router\";\nexport class AuthService {\n  constructor(auth, db, router) {\n    this.auth = auth;\n    this.db = db;\n    this.router = router;\n    this.usersCollection = db.collection(\"users\");\n    this.isAuthenticated$ = auth.user.pipe(map(user => !!user));\n    this.isAuthenticatedWithDealy$ = this.isAuthenticated$.pipe(delay(1000));\n  }\n\n  createUser(userData) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (!userData.password) {\n        throw new Error(\"Password not provided!\");\n      }\n\n      const userCred = yield _this.auth.createUserWithEmailAndPassword(userData.email, userData.password);\n\n      if (!userCred.user) {\n        throw new Error(\"user cannot be found\");\n      }\n\n      yield _this.usersCollection.doc(userCred.user.uid).set({\n        name: userData.name,\n        email: userData.email,\n        age: userData.age,\n        phoneNumber: userData.phoneNumber\n      });\n      yield userCred.user.updateProfile({\n        displayName: userData.name\n      });\n    })();\n  }\n\n  logout($event) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      $event.preventDefault();\n      yield _this2.afAuth.signOut();\n      yield _this2.router.navigateByUrl('/');\n    })();\n  }\n\n}\n\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.AngularFireAuth), i0.ɵɵinject(i2.AngularFirestore), i0.ɵɵinject(i3.Router));\n};\n\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"sources":["C:/Users/stavsa/Documents/Angular-/clips/src/app/services/auth.service.ts"],"names":["map","delay","i0","i1","i2","i3","AuthService","constructor","auth","db","router","usersCollection","collection","isAuthenticated$","user","pipe","isAuthenticatedWithDealy$","createUser","userData","password","Error","userCred","createUserWithEmailAndPassword","email","doc","uid","set","name","age","phoneNumber","updateProfile","displayName","logout","$event","preventDefault","afAuth","signOut","navigateByUrl","ɵfac","AuthService_Factory","t","ɵɵinject","AngularFireAuth","AngularFirestore","Router","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,GAAT,EAAcC,KAAd,QAA2B,gBAA3B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,2BAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,gCAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,OAAO,MAAMC,WAAN,CAAkB;AACrBC,EAAAA,WAAW,CAACC,IAAD,EAAOC,EAAP,EAAWC,MAAX,EAAmB;AAC1B,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKC,EAAL,GAAUA,EAAV;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,eAAL,GAAuBF,EAAE,CAACG,UAAH,CAAc,OAAd,CAAvB;AACA,SAAKC,gBAAL,GAAwBL,IAAI,CAACM,IAAL,CAAUC,IAAV,CAAef,GAAG,CAAEc,IAAD,IAAU,CAAC,CAACA,IAAb,CAAlB,CAAxB;AACA,SAAKE,yBAAL,GAAiC,KAAKH,gBAAL,CAAsBE,IAAtB,CAA2Bd,KAAK,CAAC,IAAD,CAAhC,CAAjC;AACH;;AACKgB,EAAAA,UAAU,CAACC,QAAD,EAAW;AAAA;;AAAA;AACvB,UAAI,CAACA,QAAQ,CAACC,QAAd,EAAwB;AACpB,cAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;AACH;;AACD,YAAMC,QAAQ,SAAS,KAAI,CAACb,IAAL,CAAUc,8BAAV,CAAyCJ,QAAQ,CAACK,KAAlD,EAAyDL,QAAQ,CAACC,QAAlE,CAAvB;;AACA,UAAI,CAACE,QAAQ,CAACP,IAAd,EAAoB;AAChB,cAAM,IAAIM,KAAJ,CAAU,sBAAV,CAAN;AACH;;AACD,YAAM,KAAI,CAACT,eAAL,CAAqBa,GAArB,CAAyBH,QAAQ,CAACP,IAAT,CAAcW,GAAvC,EAA4CC,GAA5C,CAAgD;AAClDC,QAAAA,IAAI,EAAET,QAAQ,CAACS,IADmC;AAElDJ,QAAAA,KAAK,EAAEL,QAAQ,CAACK,KAFkC;AAGlDK,QAAAA,GAAG,EAAEV,QAAQ,CAACU,GAHoC;AAIlDC,QAAAA,WAAW,EAAEX,QAAQ,CAACW;AAJ4B,OAAhD,CAAN;AAMA,YAAMR,QAAQ,CAACP,IAAT,CAAcgB,aAAd,CAA4B;AAC9BC,QAAAA,WAAW,EAAEb,QAAQ,CAACS;AADQ,OAA5B,CAAN;AAduB;AAiB1B;;AACKK,EAAAA,MAAM,CAACC,MAAD,EAAS;AAAA;;AAAA;AACjBA,MAAAA,MAAM,CAACC,cAAP;AACA,YAAM,MAAI,CAACC,MAAL,CAAYC,OAAZ,EAAN;AACA,YAAM,MAAI,CAAC1B,MAAL,CAAY2B,aAAZ,CAA0B,GAA1B,CAAN;AAHiB;AAIpB;;AA/BoB;;AAiCzB/B,WAAW,CAACgC,IAAZ,GAAmB,SAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAAE,SAAO,KAAKA,CAAC,IAAIlC,WAAV,EAAuBJ,EAAE,CAACuC,QAAH,CAAYtC,EAAE,CAACuC,eAAf,CAAvB,EAAwDxC,EAAE,CAACuC,QAAH,CAAYrC,EAAE,CAACuC,gBAAf,CAAxD,EAA0FzC,EAAE,CAACuC,QAAH,CAAYpC,EAAE,CAACuC,MAAf,CAA1F,CAAP;AAA2H,CAAhL;;AACAtC,WAAW,CAACuC,KAAZ,GAAoB,aAAc3C,EAAE,CAAC4C,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEzC,WAAT;AAAsB0C,EAAAA,OAAO,EAAE1C,WAAW,CAACgC,IAA3C;AAAiDW,EAAAA,UAAU,EAAE;AAA7D,CAAtB,CAAlC","sourcesContent":["import { map, delay } from \"rxjs/operators\";\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/fire/compat/auth\";\r\nimport * as i2 from \"@angular/fire/compat/firestore\";\r\nimport * as i3 from \"@angular/router\";\r\nexport class AuthService {\r\n    constructor(auth, db, router) {\r\n        this.auth = auth;\r\n        this.db = db;\r\n        this.router = router;\r\n        this.usersCollection = db.collection(\"users\");\r\n        this.isAuthenticated$ = auth.user.pipe(map((user) => !!user));\r\n        this.isAuthenticatedWithDealy$ = this.isAuthenticated$.pipe(delay(1000));\r\n    }\r\n    async createUser(userData) {\r\n        if (!userData.password) {\r\n            throw new Error(\"Password not provided!\");\r\n        }\r\n        const userCred = await this.auth.createUserWithEmailAndPassword(userData.email, userData.password);\r\n        if (!userCred.user) {\r\n            throw new Error(\"user cannot be found\");\r\n        }\r\n        await this.usersCollection.doc(userCred.user.uid).set({\r\n            name: userData.name,\r\n            email: userData.email,\r\n            age: userData.age,\r\n            phoneNumber: userData.phoneNumber,\r\n        });\r\n        await userCred.user.updateProfile({\r\n            displayName: userData.name,\r\n        });\r\n    }\r\n    async logout($event) {\r\n        $event.preventDefault();\r\n        await this.afAuth.signOut();\r\n        await this.router.navigateByUrl('/');\r\n    }\r\n}\r\nAuthService.ɵfac = function AuthService_Factory(t) { return new (t || AuthService)(i0.ɵɵinject(i1.AngularFireAuth), i0.ɵɵinject(i2.AngularFirestore), i0.ɵɵinject(i3.Router)); };\r\nAuthService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthService, factory: AuthService.ɵfac, providedIn: \"root\" });\r\n"]},"metadata":{},"sourceType":"module"}